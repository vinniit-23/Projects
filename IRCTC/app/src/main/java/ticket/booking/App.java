 /*
  * This source file was generated by the Gradle 'init' task
  */
 package ticket.booking;

 import ticket.booking.Util.UserServiceUtil;
 import ticket.booking.entities.Train;
 import ticket.booking.entities.User;
 import ticket.booking.services.UserBookingService;

 import java.util.*;

 public class App {

     public static void main(String[] args) {
         System.out.println("Running Train Booking System");
         Scanner in = new Scanner(System.in);
         int option = 0;
         UserBookingService userBookingService;
         try {
             userBookingService = new UserBookingService();
         } catch (Exception e) {
             System.out.println("There is something wrong");
             return;
         }
         while (option != 7) {
             System.out.println("choose option");
             System.out.println("1. Sign Up");
             System.out.println("2. Login");
             System.out.println("3. Fetch Booking History");
             System.out.println("4. Search Train");
             System.out.println("5. Book a Seat");
             System.out.println("6. Cancel a Ticket");
             System.out.println("7. Exit");
         }
         option = in.nextInt();
         switch (option) {
             case 1:
                 System.out.println("Enter your Name");
                 String nameToSignUp = in.next();
                 System.out.println("Enter your password");
                 String passwordToSignUp = in.next();
                 User userToSignUp = new User(nameToSignUp, passwordToSignUp, UserServiceUtil.hashPassword(passwordToSignUp)
                         , new ArrayList<>(), UUID.randomUUID().toString());
                 userBookingService.signUp(userToSignUp);
                 break;
             case 2:
                 System.out.println("Enter your userName");
                 String loginName = in.next();
                 System.out.println("Enter your password");
                 String loginPassword = in.next();
                 User userToLogin = new User(loginName, loginPassword, UserServiceUtil.hashPassword(loginPassword)
                         , new ArrayList<>(), UUID.randomUUID().toString());
                 try {
                     userBookingService = new UserBookingService(userToLogin);
                 } catch (Exception e) {
                     return;
                 }
                 break;
             case 3:
                 System.out.println("Fetch Your Bookings");
                 userBookingService.fetchBooking();
                 break;
             case 4:
               /*
               //todo:complete whole project
                System.out.println("Enter Your Source Station");
                 String source = in.next();
                 System.out.println("Enter Your Destination Station");
                 String destination = in.next();
                 List<Train> trains = userBookingService.getTrains(source, destination);
                 int index = 1;
                 for (Train t : trains) {
                     System.out.println(index + "Train id: " + t.getTrainId());
                     for (Map.Entry<String, String> entry : t.getStationTimes().entrySet()) {
                         System.out.println("Station: " + entry.getKey() + " Time: " + entry.getValue());
                     }
                 }
                 System.out.println("Select a train by typing 1,2,3...");
                 trainSelectedForBooking = trains.get(in.nextInt());
                 break;      */
             case 5:
               /*  System.out.println("Enter your source");
                 String source = in.next();
                 System.out.println("Enter your destination");
                 String destination = in.next();
                 System.out.println("Enter your date of travel");
                 Date dateOfTravel = in.next();
                 Ticket ticket = new Ticket(UUID.randomUUID().toString(), userBookingService.getUser().getUserId(), source, destination, dateOfTravel, trainSelectedForBooking);
                 userBookingService.bookTicket(ticket);
                 break;              */
             case 6:
                 System.out.println("Enter your ticket id");
                 String ticketId = in.next();
                 userBookingService.cancelBooking(ticketId);
                 break;
             case 7:
                 System.out.println("Exiting");
                 break;
             default:
                 System.out.println("Invalid option");
                 break;

         }

     }
 }
